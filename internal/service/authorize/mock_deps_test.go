// Code generated by MockGen. DO NOT EDIT.
// Source: deps.go

// Package authorize is a generated GoMock package.
package authorize

import (
	model "VK_test_proect/internal/model"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MocktokenService is a mock of tokenService interface.
type MocktokenService struct {
	ctrl     *gomock.Controller
	recorder *MocktokenServiceMockRecorder
}

// MocktokenServiceMockRecorder is the mock recorder for MocktokenService.
type MocktokenServiceMockRecorder struct {
	mock *MocktokenService
}

// NewMocktokenService creates a new mock instance.
func NewMocktokenService(ctrl *gomock.Controller) *MocktokenService {
	mock := &MocktokenService{ctrl: ctrl}
	mock.recorder = &MocktokenServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocktokenService) EXPECT() *MocktokenServiceMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MocktokenService) Generate(user model.User) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate", user)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MocktokenServiceMockRecorder) Generate(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MocktokenService)(nil).Generate), user)
}

// MockuserRepo is a mock of userRepo interface.
type MockuserRepo struct {
	ctrl     *gomock.Controller
	recorder *MockuserRepoMockRecorder
}

// MockuserRepoMockRecorder is the mock recorder for MockuserRepo.
type MockuserRepoMockRecorder struct {
	mock *MockuserRepo
}

// NewMockuserRepo creates a new mock instance.
func NewMockuserRepo(ctrl *gomock.Controller) *MockuserRepo {
	mock := &MockuserRepo{ctrl: ctrl}
	mock.recorder = &MockuserRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockuserRepo) EXPECT() *MockuserRepoMockRecorder {
	return m.recorder
}

// GetUserByEmailAndPassword mocks base method.
func (m *MockuserRepo) GetUserByEmailAndPassword(ctx context.Context, email, password string) (model.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserByEmailAndPassword", ctx, email, password)
	ret0, _ := ret[0].(model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserByEmailAndPassword indicates an expected call of GetUserByEmailAndPassword.
func (mr *MockuserRepoMockRecorder) GetUserByEmailAndPassword(ctx, email, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserByEmailAndPassword", reflect.TypeOf((*MockuserRepo)(nil).GetUserByEmailAndPassword), ctx, email, password)
}
